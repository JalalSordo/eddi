/*
 * EDDI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * TestCaseDescriptor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-13T23:55:01.697Z")
public class TestCaseDescriptor {
  @SerializedName("resource")
  private String resource = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("lastModifiedBy")
  private String lastModifiedBy = null;

  @SerializedName("lastModifiedOn")
  private OffsetDateTime lastModifiedOn = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets testCaseState
   */
  @JsonAdapter(TestCaseStateEnum.Adapter.class)
  public enum TestCaseStateEnum {
    IN_PROGRESS("IN_PROGRESS"),
    
    SUCCESS("SUCCESS"),
    
    FAILED("FAILED"),
    
    ERROR("ERROR");

    private String value;

    TestCaseStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TestCaseStateEnum fromValue(String text) {
      for (TestCaseStateEnum b : TestCaseStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TestCaseStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TestCaseStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TestCaseStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TestCaseStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("testCaseState")
  private TestCaseStateEnum testCaseState = null;

  public TestCaseDescriptor resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @ApiModelProperty(value = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public TestCaseDescriptor createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public TestCaseDescriptor createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public TestCaseDescriptor lastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }

  public TestCaseDescriptor lastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

   /**
   * Get lastModifiedOn
   * @return lastModifiedOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }

  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }

  public TestCaseDescriptor deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public TestCaseDescriptor name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestCaseDescriptor description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestCaseDescriptor testCaseState(TestCaseStateEnum testCaseState) {
    this.testCaseState = testCaseState;
    return this;
  }

   /**
   * Get testCaseState
   * @return testCaseState
  **/
  @ApiModelProperty(value = "")
  public TestCaseStateEnum getTestCaseState() {
    return testCaseState;
  }

  public void setTestCaseState(TestCaseStateEnum testCaseState) {
    this.testCaseState = testCaseState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCaseDescriptor testCaseDescriptor = (TestCaseDescriptor) o;
    return Objects.equals(this.resource, testCaseDescriptor.resource) &&
        Objects.equals(this.createdBy, testCaseDescriptor.createdBy) &&
        Objects.equals(this.createdOn, testCaseDescriptor.createdOn) &&
        Objects.equals(this.lastModifiedBy, testCaseDescriptor.lastModifiedBy) &&
        Objects.equals(this.lastModifiedOn, testCaseDescriptor.lastModifiedOn) &&
        Objects.equals(this.deleted, testCaseDescriptor.deleted) &&
        Objects.equals(this.name, testCaseDescriptor.name) &&
        Objects.equals(this.description, testCaseDescriptor.description) &&
        Objects.equals(this.testCaseState, testCaseDescriptor.testCaseState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, createdBy, createdOn, lastModifiedBy, lastModifiedOn, deleted, name, description, testCaseState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCaseDescriptor {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    testCaseState: ").append(toIndentedString(testCaseState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

