/*
 * EDDI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConfigValue;
import io.swagger.client.model.ExtensionDescriptor;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ExtensionDescriptor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-13T23:55:01.697Z")
public class ExtensionDescriptor {
  @SerializedName("type")
  private String type = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("configs")
  private Map<String, ConfigValue> configs = null;

  @SerializedName("extensions")
  private Map<String, List<ExtensionDescriptor>> extensions = null;

  public ExtensionDescriptor type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ExtensionDescriptor displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public ExtensionDescriptor configs(Map<String, ConfigValue> configs) {
    this.configs = configs;
    return this;
  }

  public ExtensionDescriptor putConfigsItem(String key, ConfigValue configsItem) {
    if (this.configs == null) {
      this.configs = new HashMap<String, ConfigValue>();
    }
    this.configs.put(key, configsItem);
    return this;
  }

   /**
   * Get configs
   * @return configs
  **/
  @ApiModelProperty(value = "")
  public Map<String, ConfigValue> getConfigs() {
    return configs;
  }

  public void setConfigs(Map<String, ConfigValue> configs) {
    this.configs = configs;
  }

  public ExtensionDescriptor extensions(Map<String, List<ExtensionDescriptor>> extensions) {
    this.extensions = extensions;
    return this;
  }

  public ExtensionDescriptor putExtensionsItem(String key, List<ExtensionDescriptor> extensionsItem) {
    if (this.extensions == null) {
      this.extensions = new HashMap<String, List<ExtensionDescriptor>>();
    }
    this.extensions.put(key, extensionsItem);
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<ExtensionDescriptor>> getExtensions() {
    return extensions;
  }

  public void setExtensions(Map<String, List<ExtensionDescriptor>> extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtensionDescriptor extensionDescriptor = (ExtensionDescriptor) o;
    return Objects.equals(this.type, extensionDescriptor.type) &&
        Objects.equals(this.displayName, extensionDescriptor.displayName) &&
        Objects.equals(this.configs, extensionDescriptor.configs) &&
        Objects.equals(this.extensions, extensionDescriptor.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, displayName, configs, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtensionDescriptor {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    configs: ").append(toIndentedString(configs)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

