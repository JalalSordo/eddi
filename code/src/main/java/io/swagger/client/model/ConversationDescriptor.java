/*
 * EDDI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ConversationDescriptor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-13T23:55:01.697Z")
public class ConversationDescriptor {
  @SerializedName("resource")
  private String resource = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("lastModifiedBy")
  private String lastModifiedBy = null;

  @SerializedName("lastModifiedOn")
  private OffsetDateTime lastModifiedOn = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("botName")
  private String botName = null;

  /**
   * Gets or Sets viewState
   */
  @JsonAdapter(ViewStateEnum.Adapter.class)
  public enum ViewStateEnum {
    UNSEEN("UNSEEN"),
    
    SEEN("SEEN");

    private String value;

    ViewStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ViewStateEnum fromValue(String text) {
      for (ViewStateEnum b : ViewStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ViewStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ViewStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ViewStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ViewStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("viewState")
  private ViewStateEnum viewState = null;

  @SerializedName("conversationStepSize")
  private Integer conversationStepSize = null;

  @SerializedName("createdByUserName")
  private String createdByUserName = null;

  /**
   * Gets or Sets environment
   */
  @JsonAdapter(EnvironmentEnum.Adapter.class)
  public enum EnvironmentEnum {
    RESTRICTED("restricted"),
    
    UNRESTRICTED("unrestricted"),
    
    TEST("test");

    private String value;

    EnvironmentEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EnvironmentEnum fromValue(String text) {
      for (EnvironmentEnum b : EnvironmentEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EnvironmentEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvironmentEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EnvironmentEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EnvironmentEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("environment")
  private EnvironmentEnum environment = null;

  /**
   * Gets or Sets conversationState
   */
  @JsonAdapter(ConversationStateEnum.Adapter.class)
  public enum ConversationStateEnum {
    READY("READY"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    ENDED("ENDED"),
    
    EXECUTION_INTERRUPTED("EXECUTION_INTERRUPTED"),
    
    ERROR("ERROR");

    private String value;

    ConversationStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConversationStateEnum fromValue(String text) {
      for (ConversationStateEnum b : ConversationStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ConversationStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConversationStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConversationStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ConversationStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("conversationState")
  private ConversationStateEnum conversationState = null;

  public ConversationDescriptor resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @ApiModelProperty(value = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public ConversationDescriptor createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public ConversationDescriptor createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public ConversationDescriptor lastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @ApiModelProperty(value = "")
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }

  public ConversationDescriptor lastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

   /**
   * Get lastModifiedOn
   * @return lastModifiedOn
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }

  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }

  public ConversationDescriptor deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public ConversationDescriptor botName(String botName) {
    this.botName = botName;
    return this;
  }

   /**
   * Get botName
   * @return botName
  **/
  @ApiModelProperty(value = "")
  public String getBotName() {
    return botName;
  }

  public void setBotName(String botName) {
    this.botName = botName;
  }

  public ConversationDescriptor viewState(ViewStateEnum viewState) {
    this.viewState = viewState;
    return this;
  }

   /**
   * Get viewState
   * @return viewState
  **/
  @ApiModelProperty(value = "")
  public ViewStateEnum getViewState() {
    return viewState;
  }

  public void setViewState(ViewStateEnum viewState) {
    this.viewState = viewState;
  }

  public ConversationDescriptor conversationStepSize(Integer conversationStepSize) {
    this.conversationStepSize = conversationStepSize;
    return this;
  }

   /**
   * Get conversationStepSize
   * @return conversationStepSize
  **/
  @ApiModelProperty(value = "")
  public Integer getConversationStepSize() {
    return conversationStepSize;
  }

  public void setConversationStepSize(Integer conversationStepSize) {
    this.conversationStepSize = conversationStepSize;
  }

  public ConversationDescriptor createdByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
    return this;
  }

   /**
   * Get createdByUserName
   * @return createdByUserName
  **/
  @ApiModelProperty(value = "")
  public String getCreatedByUserName() {
    return createdByUserName;
  }

  public void setCreatedByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
  }

  public ConversationDescriptor environment(EnvironmentEnum environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @ApiModelProperty(value = "")
  public EnvironmentEnum getEnvironment() {
    return environment;
  }

  public void setEnvironment(EnvironmentEnum environment) {
    this.environment = environment;
  }

  public ConversationDescriptor conversationState(ConversationStateEnum conversationState) {
    this.conversationState = conversationState;
    return this;
  }

   /**
   * Get conversationState
   * @return conversationState
  **/
  @ApiModelProperty(value = "")
  public ConversationStateEnum getConversationState() {
    return conversationState;
  }

  public void setConversationState(ConversationStateEnum conversationState) {
    this.conversationState = conversationState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationDescriptor conversationDescriptor = (ConversationDescriptor) o;
    return Objects.equals(this.resource, conversationDescriptor.resource) &&
        Objects.equals(this.createdBy, conversationDescriptor.createdBy) &&
        Objects.equals(this.createdOn, conversationDescriptor.createdOn) &&
        Objects.equals(this.lastModifiedBy, conversationDescriptor.lastModifiedBy) &&
        Objects.equals(this.lastModifiedOn, conversationDescriptor.lastModifiedOn) &&
        Objects.equals(this.deleted, conversationDescriptor.deleted) &&
        Objects.equals(this.botName, conversationDescriptor.botName) &&
        Objects.equals(this.viewState, conversationDescriptor.viewState) &&
        Objects.equals(this.conversationStepSize, conversationDescriptor.conversationStepSize) &&
        Objects.equals(this.createdByUserName, conversationDescriptor.createdByUserName) &&
        Objects.equals(this.environment, conversationDescriptor.environment) &&
        Objects.equals(this.conversationState, conversationDescriptor.conversationState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, createdBy, createdOn, lastModifiedBy, lastModifiedOn, deleted, botName, viewState, conversationStepSize, createdByUserName, environment, conversationState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationDescriptor {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    botName: ").append(toIndentedString(botName)).append("\n");
    sb.append("    viewState: ").append(toIndentedString(viewState)).append("\n");
    sb.append("    conversationStepSize: ").append(toIndentedString(conversationStepSize)).append("\n");
    sb.append("    createdByUserName: ").append(toIndentedString(createdByUserName)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    conversationState: ").append(toIndentedString(conversationState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

